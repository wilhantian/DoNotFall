/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "platform/android/jni/JniHelper.h"
#include <android/log.h>
#include "cocos2d.h"
#include "Cocos2dx/Common/CCUMTypeDef.h"
#include <string>
#include <vector>
#include <map>

/* Header for class com_umeng_social_CCUMSocialController */
USING_NS_CC;
using namespace std;
USING_NS_UM_SOCIAL;

#ifndef _Included_com_umeng_social_CCUMSocialController
#define _Included_com_umeng_social_CCUMSocialController
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_umeng_social_CCUMSocialController
 * Method:    OnAuthorizeStart
 * Function : 授权开始的回调函数, jint参数为要授权的平台
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_umeng_social_CCUMSocialController_OnAuthorizeStart
  (JNIEnv *, jclass, jint);


/*
 * Class:     com_umeng_social_CCUMSocialController
 * Method:    OnAuthorizeComplete
 * Function : 授权结束的回调函数, 参数二的jint为要授权的平台, 参数三的jint为返回码,其中200为授权成功, 
 				jobjectArray为授权成功时返回的数据,长度为2, 第一个数据为token, 第二个数据为过期时间。
 				如果授权失败则返回的长度为1,包含了错误信息.
 * Signature: ([Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_umeng_social_CCUMSocialController_OnAuthorizeComplete
  (JNIEnv *, jclass, jint, jint, jobjectArray);

/*
 * Class:     com_umeng_social_CCUMSocialController
 * Method:    OnShareStart
 * Function : 开始分享的回调函数
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_umeng_social_CCUMSocialController_OnShareStart
  (JNIEnv *, jclass);

/*
 * Class:     com_umeng_social_CCUMSocialController
 * Method:    OnShareComplete
 * Function : 分享结束的回调函数, 参数2为分享的平台; 参数3为返回码, 200为分享成功.
 * Signature: (IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_umeng_social_CCUMSocialController_OnShareComplete
  (JNIEnv *, jclass, jint, jint, jstring);


/*
 * 获取某个方法的对象
 * @param mi 方法对象， 传递的是引用
 * @param methodName 方法名
 * @param sig 		方法签名
 */
bool getMethod(JniMethodInfo &mi, const char *methodName, const char *sig);

/*
 * 释放方法对象
 * @param mi 要释放的方法对象
 */
void releaseMethod(JniMethodInfo &mi);

/*
 * 设置友盟app key
 * @param appKey 友盟app key
 */
void setUmengAppkey(const char* appkey);
        
/*
 * 对某平台进行授权
 * @param platfrom 要授权的平台, 参考CCUMTypeDef.h中的Platform枚举定义
 * @param  callback 授权回调, 具体参考CCUMTypeDef.h中的定义
 */
void doAuthorize(int platform, AuthEventHandler callback);
/*
 * 删除某平台的授权信息
 * @param  	callback 删除授权的回调, 具体参考CCUMTypeDef.h中的定义
 */
void deletePlatformAuthorization(int platform, AuthEventHandler callback);
    
/*
 * 判断某平台是否已经授权
 * @param platform 要判定的平台, 参考CCUMTypeDef.h中的Platform枚举定义
 */
bool isPlatformAuthorized(int platform);
    
/*
 * 打开分享面板
 * @param callback 分享回调,具体参考CCUMTypeDef.h中的定义
 */
void doOpenShare(ShareEventHandler callback);
    
/*
 * 直接分享到某个平台，不打开分享面板和内容编辑页面
 * @param platform 要分享到的目标平台， 参考CCUMTypeDef.h中的Platform枚举定义
 * @param callback 分享回调，具体参考CCUMTypeDef.h中的定义
 */
void doDirectShare(int platform, ShareEventHandler callback);


/*
 * 设置要分享的文字内容
 * @param text 要分享的文字内容
 */
void setShareTextContent(const char* text);

/*
 * 设置要分享的图片的本地路径或者url
 * @param pathOrUrl 图片的本地路径或者url, 如果是url必须则必须以http://或者https://开头
 */
void setShareImageName(const char* pathOrUrl);

/*
 * 设置SDK支持的平台
 * @param platforms SDK支持的平台， 参考CCUMTypeDef.h中的Platform枚举定义
 */
void setSocialPlatforms(vector<int>* platforms);


/**
 * 初始化Cocos2dx SDK
 * 
 * @param type 类型
 @param version 版本号
 */
 void initCocos2dxSDKFromJni(const char* type, const char* version) ;


/**
 * 设置QQ互联平台的的app id,包括QQ和QQ空间
 * 
 * @param appid
 */
 void setQQAndQzoneAppIdWithAppKey(const char* appid, const char* appKey) ; 

/**
 * 设置微信和微信朋友圈的app id
 * 
 * @param appid
*/
void setWeiXinPlatformAppId(const char* appid) ;

/**
* 设置易信和易信朋友圈的app id
* 
* @param appid
*/
void setYiXinPlatformAppKey(const char* appid) ;

/**
 * 设置来往和来往动态的app id
 * 
 * @param appid
 */
 void setLaiwangPlatformAppId(const char* appid);

/**
* 设置来往和来往动态的app key
* 
* @param appid
*/
void setLaiwangPlatformAppKey(const char* appkey) ;

/**
* 设置来往和来往动态的app key
* 
* @param appid
*/
void setLaiwangPlatformAppName(const char* appName) ;

/**
* 设置facebook app id
* 
* @param appid
*/
void setFacebookPlatformAppId(const char* appId);


/*
 * 设置SDK的target url, 即用户点击某条分享时跳转到的目标页面
 * @param url 用户点击某条分享时跳转到的目标页面通常为app的主页或者下载链接等
 */
void setShareTargetUrl(const char* url) ;

/**
 *  是否开启log
 * @param flag 如果为true则开启log, 否则关闭.
 */
 void setAndroidLogEnable(bool flag);

// /**
//  * 添加平台支持
//  * @param platform 要添加的目标平台
//  */
// void supportPlatform(int platform) ;


void getData(JNIEnv *env, jobjectArray data, map<string, string>& outputMap) ;

    
#ifdef __cplusplus
}
#endif
#endif
